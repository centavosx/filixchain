services:
  website:
    build:
      context: ./
      dockerfile: Dockerfile.web
      args:
        - SESSION_SECRET_KEY=${SESSION_SECRET_KEY}
        - SERVER_USER_AGENT=${SERVER_USER_AGENT}
        - NEXT_PUBLIC_WS_API_URL=${WS_API_URL}
        - NEXT_PUBLIC_BASE_API_URL=${BASE_API_URL}
        - SERVER_BASE_API_URL=${SERVER_BASE_API_URL}
        - COOKIE_DOMAIN=${COOKIE_DOMAIN}
        - APP_URL=${APP_URL}
    restart: always
    depends_on:
      - api
    networks:
      - dokploy-network
    labels:
      - traefik.enable=true
      - traefik.http.routers.frontend-staging.rule=Host(`staging.filixchain.xyz`)
      - traefik.http.routers.frontend-staging.entrypoints=websecure
      - traefik.http.routers.frontend-staging.tls.certResolver=letsencrypt
      - traefik.http.services.frontend-staging.loadbalancer.server.port=3000
    ports:
      - 3000

  miner:
    build:
      context: ./
      dockerfile: Dockerfile.miner
      args:
        - MINER_WALLET_ADDRESS=${MINER_WALLET_ADDRESS}
        - MINER_USER_AGENT=${MINER_USER_AGENT}
        - WS_URL=${SERVER_BASE_WS_URL}
        - NODE_ENV=${NODE_ENV}
    restart: always
    networks:
      - dokploy-network
    depends_on:
      - api

  api:
    build:
      context: ./
      dockerfile: Dockerfile.api
      args:
        - HTTP_PORT=${API_PORT}
        - WS_PORT=${WS_PORT}
        - SESSION_SECRET_KEY=${SESSION_SECRET_KEY}
        - SERVER_USER_AGENT=${SERVER_USER_AGENT}
        - MINER_USER_AGENT=${MINER_USER_AGENT}
        - REDIS_HOST=${REDIS_HOST}
        - REDIS_PORT=${REDIS_PORT}
        - REDIS_PASS=${REDIS_PASS}
        - HTTP_ALLOWED_ORIGIN=${HTTP_ALLOWED_ORIGIN}
        - WS_ALLOWED_ORIGIN=${WS_ALLOWED_ORIGIN}
        - NODE_ENV=${NODE_ENV}
        - FAUCET_KEY=${FAUCET_KEY}
    restart: always
    networks:
      - dokploy-network
    depends_on:
      - redis
    labels:
      - traefik.enable=true
      - traefik.http.routers.backend-staging.rule=Host(`api-staging.filixchain.xyz`)
      - traefik.http.routers.backend-staging.entrypoints=websecure
      - traefik.http.routers.backend-staging.tls.certResolver=letsencrypt
      - traefik.http.services.backend-staging.loadbalancer.server.port=3003
    ports:
      - 3003

  redis:
    image: redis:alpine
    networks:
      - dokploy-network
    ports:
      - 6379

networks:
  dokploy-network:
    external: true
